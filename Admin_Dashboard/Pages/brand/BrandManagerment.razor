@page "/brands"
@using Admin_Dashboard.Service
@using Admin_Dashboard.DTOs
@inject BrandService BrandService
@inject NavigationManager Navigation

<div class="container-fluid p-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3><i class="fas fa-list-ul me-2"></i>Brand Management</h3>
        <button class="btn btn-primary" @onclick="CreateBrand">
            <i class="fas fa-plus me-1"></i> Add New Brand
        </button>
    </div>

    @if (categories == null)
    {
        <div class="d-flex justify-content-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (categories.Items.Count == 0)
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i> No categories yet. Please add a new category!
        </div>
    }
    else
    {
        <div class="card">

            <div class="card-body p-0">
                <table class="table table-hover table-striped mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="text-center" style="width: 80px;">ID</th>
                            <th>Brand Name</th>
                            <th>Description</th>
                            <th class="text-center" style="width: 150px;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var Brand in categories.Items)
                        {
                            <tr>
                                <td class="text-center">@Brand.BrandId</td>
                                <td>
                                    <a href="/brand/@Brand.BrandId" class="text-decoration-none fw-medium text-primary">
                                        @Brand.Name
                                    </a>
                                </td>
                                <td>
                                    @(string.IsNullOrEmpty(Brand.Description) ? "No description" :
                                        (Brand.Description.Length > 100 ? Brand.Description.Substring(0, 97) + "..." : Brand.Description))
                                </td>
                                <td>
                                    <div class="d-flex justify-content-center gap-2">
                                        <button class="btn btn-sm btn-info" @onclick="() => EditBrand(Brand.BrandId)" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="card-footer">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <button class="btn btn-outline-primary me-2" @onclick="PrevPage" disabled="@(categories.CurrentPage == 1)">
                            <i class="fas fa-chevron-left me-1"></i> Previous
                        </button>
                        <div class="px-2">
                            <span class="fw-medium">Page @categories.CurrentPage / @categories.MaxPage</span>
                        </div>
                        <button class="btn btn-outline-primary" @onclick="NextPage" disabled="@(categories.CurrentPage == categories.MaxPage)">
                            Next <i class="fas fa-chevron-right ms-1"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3 alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> @errorMessage
            <button type="button" class="btn-close" @onclick="ClearError"></button>
        </div>
    }
</div>

@code {
    private DataResponseDTO<BrandGetDTO> categories;
    private int currentPage = 1;
    private string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

    private async Task LoadCategories()
    {
        try
        {
            categories = await BrandService.GetPagedCategoriesAsync(currentPage);
        }
        catch (Exception ex)
        {
            errorMessage = $"Không thể tải danh mục: {ex.Message}";
        }
    }

    private async Task PrevPage()
    {
        currentPage--;
        await LoadCategories();
    }

    private async Task NextPage()
    {
        currentPage++;
        await LoadCategories();
    }

    private async Task SearchCategories()
    {
        currentPage = 1; // Reset về trang đầu tiên khi tìm kiếm
        await LoadCategories();
    }

    private async Task ClearSearch()
    {
   
        await SearchCategories();
    }

    private void ClearError()
    {
        errorMessage = "";
    }

    private void CreateBrand()
    {
        Navigation.NavigateTo("/brand/create");
    }

    private void EditBrand(int id)
    {
        Navigation.NavigateTo($"/brand/edit/{id}");
    }

}